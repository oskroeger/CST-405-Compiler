Terminals unused in grammar

    UNRECOGNIZED


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctionDefList VarDeclList StmtList

    2 FunctionDefList: ε
    3                | FunctionDef FunctionDefList

    4 FunctionDef: FunctionHeader VarDeclList StmtList FunctionFooter

    5 FunctionHeader: FUNCTION ID LPAREN ParamList RPAREN LBRACE

    6 FunctionFooter: RBRACE

    7 ParamList: ε
    8          | Param ParamListTail

    9 ParamListTail: ε
   10              | COMMA Param ParamListTail

   11 Param: TYPE ID

   12 ArgList: ε
   13        | Expr ArgListTail

   14 ArgListTail: ε
   15            | COMMA Expr ArgListTail

   16 VarDeclList: ε
   17            | VarDecl VarDeclList

   18 VarDecl: TYPE ID SEMICOLON
   19        | TYPE ID LBRACKET INTEGER RBRACKET SEMICOLON

   20 StmtList: ε
   21         | Stmt StmtList

   22 Stmt: ID EQ Expr SEMICOLON
   23     | ArrayAccess EQ Expr SEMICOLON
   24     | WRITE Expr SEMICOLON
   25     | ID LPAREN ArgList RPAREN SEMICOLON
   26     | IF LPAREN Expr RPAREN Stmt ELSE Stmt
   27     | IF LPAREN Expr RPAREN Stmt
   28     | LBRACE StmtList RBRACE
   29     | RETURN Expr SEMICOLON
   30     | WHILE LPAREN Expr RPAREN LBRACE StmtList RBRACE

   31 ArrayAccess: ID LBRACKET Expr RBRACKET

   32 Expr: Expr PLUS Expr
   33     | Expr MINUS Expr
   34     | Expr MULTIPLY Expr
   35     | Expr DIVIDE Expr
   36     | LPAREN Expr RPAREN
   37     | Expr GT Expr
   38     | Expr LT Expr
   39     | Expr GEQ Expr
   40     | Expr LEQ Expr
   41     | Expr EQEQ Expr
   42     | Expr NEQ Expr
   43     | ID
   44     | INTEGER
   45     | FLOAT
   46     | ArrayAccess
   47     | ID LPAREN ArgList RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 11 18 19
    ID <string> (259) 5 11 18 19 22 25 31 43 47
    SEMICOLON <character> (260) 18 19 22 23 24 25 29
    COMMA <character> (261) 10 15
    EQ <operator> (262) 22 23
    PLUS <operator> (263) 32
    MINUS <operator> (264) 33
    MULTIPLY <operator> (265) 34
    DIVIDE <operator> (266) 35
    GT <operator> (267) 37
    LT <operator> (268) 38
    GEQ <operator> (269) 39
    LEQ <operator> (270) 40
    EQEQ <operator> (271) 41
    NEQ <operator> (272) 42
    INTEGER <integer> (273) 19 44
    FLOAT <floatNum> (274) 45
    WRITE <string> (275) 24
    LPAREN (276) 5 25 26 27 30 36 47
    RPAREN (277) 5 25 26 27 30 36 47
    LBRACKET (278) 19 31
    RBRACKET (279) 19 31
    FUNCTION (280) 5
    RETURN (281) 29
    LBRACE (282) 5 28 30
    RBRACE (283) 6 28 30
    IF (284) 26 27
    ELSE (285) 26
    WHILE (286) 30
    UNRECOGNIZED (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Program <ast> (34)
        on left: 1
        on right: 0
    FunctionDefList <ast> (35)
        on left: 2 3
        on right: 1 3
    FunctionDef <ast> (36)
        on left: 4
        on right: 3
    FunctionHeader <funcHeader> (37)
        on left: 5
        on right: 4
    FunctionFooter (38)
        on left: 6
        on right: 4
    ParamList <ast> (39)
        on left: 7 8
        on right: 5
    ParamListTail <ast> (40)
        on left: 9 10
        on right: 8 10
    Param <ast> (41)
        on left: 11
        on right: 8 10
    ArgList <ast> (42)
        on left: 12 13
        on right: 25 47
    ArgListTail <ast> (43)
        on left: 14 15
        on right: 13 15
    VarDeclList <ast> (44)
        on left: 16 17
        on right: 1 4 17
    VarDecl <ast> (45)
        on left: 18 19
        on right: 17
    StmtList <ast> (46)
        on left: 20 21
        on right: 1 4 21 28 30
    Stmt <ast> (47)
        on left: 22 23 24 25 26 27 28 29 30
        on right: 21 26 27
    ArrayAccess <ast> (48)
        on left: 31
        on right: 23 46
    Expr <ast> (49)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 13 15 22 23 24 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42


State 0

    0 $accept: • Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (FunctionDefList)

    Program          go to state 2
    FunctionDefList  go to state 3
    FunctionDef      go to state 4
    FunctionHeader   go to state 5


State 1

    5 FunctionHeader: FUNCTION • ID LPAREN ParamList RPAREN LBRACE

    ID  shift, and go to state 6


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 7


State 3

    1 Program: FunctionDefList • VarDeclList StmtList

    TYPE  shift, and go to state 8

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 9
    VarDecl      go to state 10


State 4

    3 FunctionDefList: FunctionDef • FunctionDefList

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (FunctionDefList)

    FunctionDefList  go to state 11
    FunctionDef      go to state 4
    FunctionHeader   go to state 5


State 5

    4 FunctionDef: FunctionHeader • VarDeclList StmtList FunctionFooter

    TYPE  shift, and go to state 8

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 12
    VarDecl      go to state 10


State 6

    5 FunctionHeader: FUNCTION ID • LPAREN ParamList RPAREN LBRACE

    LPAREN  shift, and go to state 13


State 7

    0 $accept: Program $end •

    $default  accept


State 8

   18 VarDecl: TYPE • ID SEMICOLON
   19        | TYPE • ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 14


State 9

    1 Program: FunctionDefList VarDeclList • StmtList

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    $default  reduce using rule 20 (StmtList)

    StmtList     go to state 21
    Stmt         go to state 22
    ArrayAccess  go to state 23


State 10

   17 VarDeclList: VarDecl • VarDeclList

    TYPE  shift, and go to state 8

    $default  reduce using rule 16 (VarDeclList)

    VarDeclList  go to state 24
    VarDecl      go to state 10


State 11

    3 FunctionDefList: FunctionDef FunctionDefList •

    $default  reduce using rule 3 (FunctionDefList)


State 12

    4 FunctionDef: FunctionHeader VarDeclList • StmtList FunctionFooter

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    $default  reduce using rule 20 (StmtList)

    StmtList     go to state 25
    Stmt         go to state 22
    ArrayAccess  go to state 23


State 13

    5 FunctionHeader: FUNCTION ID LPAREN • ParamList RPAREN LBRACE

    TYPE  shift, and go to state 26

    $default  reduce using rule 7 (ParamList)

    ParamList  go to state 27
    Param      go to state 28


State 14

   18 VarDecl: TYPE ID • SEMICOLON
   19        | TYPE ID • LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 29
    LBRACKET   shift, and go to state 30


State 15

   22 Stmt: ID • EQ Expr SEMICOLON
   25     | ID • LPAREN ArgList RPAREN SEMICOLON
   31 ArrayAccess: ID • LBRACKET Expr RBRACKET

    EQ        shift, and go to state 31
    LPAREN    shift, and go to state 32
    LBRACKET  shift, and go to state 33


State 16

   24 Stmt: WRITE • Expr SEMICOLON

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 39


State 17

   29 Stmt: RETURN • Expr SEMICOLON

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 40


State 18

   28 Stmt: LBRACE • StmtList RBRACE

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    $default  reduce using rule 20 (StmtList)

    StmtList     go to state 41
    Stmt         go to state 22
    ArrayAccess  go to state 23


State 19

   26 Stmt: IF • LPAREN Expr RPAREN Stmt ELSE Stmt
   27     | IF • LPAREN Expr RPAREN Stmt

    LPAREN  shift, and go to state 42


State 20

   30 Stmt: WHILE • LPAREN Expr RPAREN LBRACE StmtList RBRACE

    LPAREN  shift, and go to state 43


State 21

    1 Program: FunctionDefList VarDeclList StmtList •

    $default  reduce using rule 1 (Program)


State 22

   21 StmtList: Stmt • StmtList

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    $default  reduce using rule 20 (StmtList)

    StmtList     go to state 44
    Stmt         go to state 22
    ArrayAccess  go to state 23


State 23

   23 Stmt: ArrayAccess • EQ Expr SEMICOLON

    EQ  shift, and go to state 45


State 24

   17 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 17 (VarDeclList)


State 25

    4 FunctionDef: FunctionHeader VarDeclList StmtList • FunctionFooter

    RBRACE  shift, and go to state 46

    FunctionFooter  go to state 47


State 26

   11 Param: TYPE • ID

    ID  shift, and go to state 48


State 27

    5 FunctionHeader: FUNCTION ID LPAREN ParamList • RPAREN LBRACE

    RPAREN  shift, and go to state 49


State 28

    8 ParamList: Param • ParamListTail

    COMMA  shift, and go to state 50

    $default  reduce using rule 9 (ParamListTail)

    ParamListTail  go to state 51


State 29

   18 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 18 (VarDecl)


State 30

   19 VarDecl: TYPE ID LBRACKET • INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 52


State 31

   22 Stmt: ID EQ • Expr SEMICOLON

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 53


State 32

   25 Stmt: ID LPAREN • ArgList RPAREN SEMICOLON

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    $default  reduce using rule 12 (ArgList)

    ArgList      go to state 54
    ArrayAccess  go to state 38
    Expr         go to state 55


State 33

   31 ArrayAccess: ID LBRACKET • Expr RBRACKET

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 56


State 34

   31 ArrayAccess: ID • LBRACKET Expr RBRACKET
   43 Expr: ID •
   47     | ID • LPAREN ArgList RPAREN

    LPAREN    shift, and go to state 57
    LBRACKET  shift, and go to state 33

    $default  reduce using rule 43 (Expr)


State 35

   44 Expr: INTEGER •

    $default  reduce using rule 44 (Expr)


State 36

   45 Expr: FLOAT •

    $default  reduce using rule 45 (Expr)


State 37

   36 Expr: LPAREN • Expr RPAREN

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 58


State 38

   46 Expr: ArrayAccess •

    $default  reduce using rule 46 (Expr)


State 39

   24 Stmt: WRITE Expr • SEMICOLON
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    SEMICOLON  shift, and go to state 59
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    MULTIPLY   shift, and go to state 62
    DIVIDE     shift, and go to state 63
    GT         shift, and go to state 64
    LT         shift, and go to state 65
    GEQ        shift, and go to state 66
    LEQ        shift, and go to state 67
    EQEQ       shift, and go to state 68
    NEQ        shift, and go to state 69


State 40

   29 Stmt: RETURN Expr • SEMICOLON
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    SEMICOLON  shift, and go to state 70
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    MULTIPLY   shift, and go to state 62
    DIVIDE     shift, and go to state 63
    GT         shift, and go to state 64
    LT         shift, and go to state 65
    GEQ        shift, and go to state 66
    LEQ        shift, and go to state 67
    EQEQ       shift, and go to state 68
    NEQ        shift, and go to state 69


State 41

   28 Stmt: LBRACE StmtList • RBRACE

    RBRACE  shift, and go to state 71


State 42

   26 Stmt: IF LPAREN • Expr RPAREN Stmt ELSE Stmt
   27     | IF LPAREN • Expr RPAREN Stmt

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 72


State 43

   30 Stmt: WHILE LPAREN • Expr RPAREN LBRACE StmtList RBRACE

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 73


State 44

   21 StmtList: Stmt StmtList •

    $default  reduce using rule 21 (StmtList)


State 45

   23 Stmt: ArrayAccess EQ • Expr SEMICOLON

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 74


State 46

    6 FunctionFooter: RBRACE •

    $default  reduce using rule 6 (FunctionFooter)


State 47

    4 FunctionDef: FunctionHeader VarDeclList StmtList FunctionFooter •

    $default  reduce using rule 4 (FunctionDef)


State 48

   11 Param: TYPE ID •

    $default  reduce using rule 11 (Param)


State 49

    5 FunctionHeader: FUNCTION ID LPAREN ParamList RPAREN • LBRACE

    LBRACE  shift, and go to state 75


State 50

   10 ParamListTail: COMMA • Param ParamListTail

    TYPE  shift, and go to state 26

    Param  go to state 76


State 51

    8 ParamList: Param ParamListTail •

    $default  reduce using rule 8 (ParamList)


State 52

   19 VarDecl: TYPE ID LBRACKET INTEGER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 77


State 53

   22 Stmt: ID EQ Expr • SEMICOLON
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    SEMICOLON  shift, and go to state 78
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    MULTIPLY   shift, and go to state 62
    DIVIDE     shift, and go to state 63
    GT         shift, and go to state 64
    LT         shift, and go to state 65
    GEQ        shift, and go to state 66
    LEQ        shift, and go to state 67
    EQEQ       shift, and go to state 68
    NEQ        shift, and go to state 69


State 54

   25 Stmt: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 79


State 55

   13 ArgList: Expr • ArgListTail
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    COMMA     shift, and go to state 80
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69

    $default  reduce using rule 14 (ArgListTail)

    ArgListTail  go to state 81


State 56

   31 ArrayAccess: ID LBRACKET Expr • RBRACKET
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69
    RBRACKET  shift, and go to state 82


State 57

   47 Expr: ID LPAREN • ArgList RPAREN

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    $default  reduce using rule 12 (ArgList)

    ArgList      go to state 83
    ArrayAccess  go to state 38
    Expr         go to state 55


State 58

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   36     | LPAREN Expr • RPAREN
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69
    RPAREN    shift, and go to state 84


State 59

   24 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 24 (Stmt)


State 60

   32 Expr: Expr PLUS • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 85


State 61

   33 Expr: Expr MINUS • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 86


State 62

   34 Expr: Expr MULTIPLY • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 87


State 63

   35 Expr: Expr DIVIDE • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 88


State 64

   37 Expr: Expr GT • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 89


State 65

   38 Expr: Expr LT • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 90


State 66

   39 Expr: Expr GEQ • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 91


State 67

   40 Expr: Expr LEQ • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 92


State 68

   41 Expr: Expr EQEQ • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 93


State 69

   42 Expr: Expr NEQ • Expr

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 94


State 70

   29 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 29 (Stmt)


State 71

   28 Stmt: LBRACE StmtList RBRACE •

    $default  reduce using rule 28 (Stmt)


State 72

   26 Stmt: IF LPAREN Expr • RPAREN Stmt ELSE Stmt
   27     | IF LPAREN Expr • RPAREN Stmt
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69
    RPAREN    shift, and go to state 95


State 73

   30 Stmt: WHILE LPAREN Expr • RPAREN LBRACE StmtList RBRACE
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69
    RPAREN    shift, and go to state 96


State 74

   23 Stmt: ArrayAccess EQ Expr • SEMICOLON
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    SEMICOLON  shift, and go to state 97
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    MULTIPLY   shift, and go to state 62
    DIVIDE     shift, and go to state 63
    GT         shift, and go to state 64
    LT         shift, and go to state 65
    GEQ        shift, and go to state 66
    LEQ        shift, and go to state 67
    EQEQ       shift, and go to state 68
    NEQ        shift, and go to state 69


State 75

    5 FunctionHeader: FUNCTION ID LPAREN ParamList RPAREN LBRACE •

    $default  reduce using rule 5 (FunctionHeader)


State 76

   10 ParamListTail: COMMA Param • ParamListTail

    COMMA  shift, and go to state 50

    $default  reduce using rule 9 (ParamListTail)

    ParamListTail  go to state 98


State 77

   19 VarDecl: TYPE ID LBRACKET INTEGER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 99


State 78

   22 Stmt: ID EQ Expr SEMICOLON •

    $default  reduce using rule 22 (Stmt)


State 79

   25 Stmt: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 100


State 80

   15 ArgListTail: COMMA • Expr ArgListTail

    ID       shift, and go to state 34
    INTEGER  shift, and go to state 35
    FLOAT    shift, and go to state 36
    LPAREN   shift, and go to state 37

    ArrayAccess  go to state 38
    Expr         go to state 101


State 81

   13 ArgList: Expr ArgListTail •

    $default  reduce using rule 13 (ArgList)


State 82

   31 ArrayAccess: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 31 (ArrayAccess)


State 83

   47 Expr: ID LPAREN ArgList • RPAREN

    RPAREN  shift, and go to state 102


State 84

   36 Expr: LPAREN Expr RPAREN •

    $default  reduce using rule 36 (Expr)


State 85

   32 Expr: Expr • PLUS Expr
   32     | Expr PLUS Expr •
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    $default  reduce using rule 32 (Expr)


State 86

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   33     | Expr MINUS Expr •
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    $default  reduce using rule 33 (Expr)


State 87

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   34     | Expr MULTIPLY Expr •
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    $default  reduce using rule 34 (Expr)


State 88

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   35     | Expr DIVIDE Expr •
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    $default  reduce using rule 35 (Expr)


State 89

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   37     | Expr GT Expr •
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 37 (Expr)


State 90

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   38     | Expr LT Expr •
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 38 (Expr)


State 91

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   39     | Expr GEQ Expr •
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 39 (Expr)


State 92

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   40     | Expr LEQ Expr •
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 40 (Expr)


State 93

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   41     | Expr EQEQ Expr •
   42     | Expr • NEQ Expr

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 41 (Expr)


State 94

   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr
   42     | Expr NEQ Expr •

    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    GT    error (nonassociative)
    LT    error (nonassociative)
    GEQ   error (nonassociative)
    LEQ   error (nonassociative)
    EQEQ  error (nonassociative)
    NEQ   error (nonassociative)

    $default  reduce using rule 42 (Expr)


State 95

   26 Stmt: IF LPAREN Expr RPAREN • Stmt ELSE Stmt
   27     | IF LPAREN Expr RPAREN • Stmt

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    Stmt         go to state 103
    ArrayAccess  go to state 23


State 96

   30 Stmt: WHILE LPAREN Expr RPAREN • LBRACE StmtList RBRACE

    LBRACE  shift, and go to state 104


State 97

   23 Stmt: ArrayAccess EQ Expr SEMICOLON •

    $default  reduce using rule 23 (Stmt)


State 98

   10 ParamListTail: COMMA Param ParamListTail •

    $default  reduce using rule 10 (ParamListTail)


State 99

   19 VarDecl: TYPE ID LBRACKET INTEGER RBRACKET SEMICOLON •

    $default  reduce using rule 19 (VarDecl)


State 100

   25 Stmt: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 101

   15 ArgListTail: COMMA Expr • ArgListTail
   32 Expr: Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MULTIPLY Expr
   35     | Expr • DIVIDE Expr
   37     | Expr • GT Expr
   38     | Expr • LT Expr
   39     | Expr • GEQ Expr
   40     | Expr • LEQ Expr
   41     | Expr • EQEQ Expr
   42     | Expr • NEQ Expr

    COMMA     shift, and go to state 80
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63
    GT        shift, and go to state 64
    LT        shift, and go to state 65
    GEQ       shift, and go to state 66
    LEQ       shift, and go to state 67
    EQEQ      shift, and go to state 68
    NEQ       shift, and go to state 69

    $default  reduce using rule 14 (ArgListTail)

    ArgListTail  go to state 105


State 102

   47 Expr: ID LPAREN ArgList RPAREN •

    $default  reduce using rule 47 (Expr)


State 103

   26 Stmt: IF LPAREN Expr RPAREN Stmt • ELSE Stmt
   27     | IF LPAREN Expr RPAREN Stmt •

    ELSE  shift, and go to state 106

    ELSE      [reduce using rule 27 (Stmt)]
    $default  reduce using rule 27 (Stmt)


State 104

   30 Stmt: WHILE LPAREN Expr RPAREN LBRACE • StmtList RBRACE

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    $default  reduce using rule 20 (StmtList)

    StmtList     go to state 107
    Stmt         go to state 22
    ArrayAccess  go to state 23


State 105

   15 ArgListTail: COMMA Expr ArgListTail •

    $default  reduce using rule 15 (ArgListTail)


State 106

   26 Stmt: IF LPAREN Expr RPAREN Stmt ELSE • Stmt

    ID      shift, and go to state 15
    WRITE   shift, and go to state 16
    RETURN  shift, and go to state 17
    LBRACE  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20

    Stmt         go to state 108
    ArrayAccess  go to state 23


State 107

   30 Stmt: WHILE LPAREN Expr RPAREN LBRACE StmtList • RBRACE

    RBRACE  shift, and go to state 109


State 108

   26 Stmt: IF LPAREN Expr RPAREN Stmt ELSE Stmt •

    $default  reduce using rule 26 (Stmt)


State 109

   30 Stmt: WHILE LPAREN Expr RPAREN LBRACE StmtList RBRACE •

    $default  reduce using rule 30 (Stmt)
