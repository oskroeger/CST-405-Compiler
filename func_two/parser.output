Terminals unused in grammar

    RETURN
    UNRECOGNIZED


Grammar

    0 $accept: Program $end

    1 Program: FunctionDefList VarDeclList StmtList

    2 FunctionDefList: ε
    3                | FunctionDef FunctionDefList

    4 FunctionDef: FUNCTION ID LPAREN RPAREN LBRACE VarDeclList StmtList RBRACE

    5 VarDeclList: ε
    6            | VarDecl VarDeclList

    7 VarDecl: TYPE ID SEMICOLON
    8        | TYPE ID LBRACKET INTEGER RBRACKET SEMICOLON

    9 StmtList: ε
   10         | Stmt StmtList

   11 Stmt: ID EQ Expr SEMICOLON
   12     | ArrayAccess EQ Expr SEMICOLON
   13     | WRITE Expr SEMICOLON
   14     | ID LPAREN RPAREN SEMICOLON

   15 ArrayAccess: ID LBRACKET Expr RBRACKET

   16 Expr: Expr PLUS Expr
   17     | Expr MINUS Expr
   18     | Expr MULTIPLY Expr
   19     | Expr DIVIDE Expr
   20     | LPAREN Expr RPAREN
   21     | ID
   22     | INTEGER
   23     | FLOAT
   24     | ArrayAccess


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 7 8
    ID <string> (259) 4 7 8 11 14 15 21
    SEMICOLON <char> (260) 7 8 11 12 13 14
    EQ <operator> (261) 11 12
    PLUS <operator> (262) 16
    MINUS <operator> (263) 17
    MULTIPLY <operator> (264) 18
    DIVIDE <operator> (265) 19
    INTEGER <integer> (266) 8 22
    FLOAT <floatNum> (267) 23
    WRITE <string> (268) 13
    LPAREN (269) 4 14 20
    RPAREN (270) 4 14 20
    LBRACKET (271) 8 15
    RBRACKET (272) 8 15
    FUNCTION (273) 4
    RETURN (274)
    LBRACE (275) 4
    RBRACE (276) 4
    UNRECOGNIZED (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    Program <ast> (24)
        on left: 1
        on right: 0
    FunctionDefList <ast> (25)
        on left: 2 3
        on right: 1 3
    FunctionDef <ast> (26)
        on left: 4
        on right: 3
    VarDeclList <ast> (27)
        on left: 5 6
        on right: 1 4 6
    VarDecl <ast> (28)
        on left: 7 8
        on right: 6
    StmtList <ast> (29)
        on left: 9 10
        on right: 1 4 10
    Stmt <ast> (30)
        on left: 11 12 13 14
        on right: 10
    ArrayAccess <ast> (31)
        on left: 15
        on right: 12 24
    Expr <ast> (32)
        on left: 16 17 18 19 20 21 22 23 24
        on right: 11 12 13 15 16 17 18 19 20


State 0

    0 $accept: • Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (FunctionDefList)

    Program          go to state 2
    FunctionDefList  go to state 3
    FunctionDef      go to state 4


State 1

    4 FunctionDef: FUNCTION • ID LPAREN RPAREN LBRACE VarDeclList StmtList RBRACE

    ID  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: FunctionDefList • VarDeclList StmtList

    TYPE  shift, and go to state 7

    $default  reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 8
    VarDecl      go to state 9


State 4

    3 FunctionDefList: FunctionDef • FunctionDefList

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (FunctionDefList)

    FunctionDefList  go to state 10
    FunctionDef      go to state 4


State 5

    4 FunctionDef: FUNCTION ID • LPAREN RPAREN LBRACE VarDeclList StmtList RBRACE

    LPAREN  shift, and go to state 11


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    7 VarDecl: TYPE • ID SEMICOLON
    8        | TYPE • ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 12


State 8

    1 Program: FunctionDefList VarDeclList • StmtList

    ID     shift, and go to state 13
    WRITE  shift, and go to state 14

    $default  reduce using rule 9 (StmtList)

    StmtList     go to state 15
    Stmt         go to state 16
    ArrayAccess  go to state 17


State 9

    6 VarDeclList: VarDecl • VarDeclList

    TYPE  shift, and go to state 7

    $default  reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 18
    VarDecl      go to state 9


State 10

    3 FunctionDefList: FunctionDef FunctionDefList •

    $default  reduce using rule 3 (FunctionDefList)


State 11

    4 FunctionDef: FUNCTION ID LPAREN • RPAREN LBRACE VarDeclList StmtList RBRACE

    RPAREN  shift, and go to state 19


State 12

    7 VarDecl: TYPE ID • SEMICOLON
    8        | TYPE ID • LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 20
    LBRACKET   shift, and go to state 21


State 13

   11 Stmt: ID • EQ Expr SEMICOLON
   14     | ID • LPAREN RPAREN SEMICOLON
   15 ArrayAccess: ID • LBRACKET Expr RBRACKET

    EQ        shift, and go to state 22
    LPAREN    shift, and go to state 23
    LBRACKET  shift, and go to state 24


State 14

   13 Stmt: WRITE • Expr SEMICOLON

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 30


State 15

    1 Program: FunctionDefList VarDeclList StmtList •

    $default  reduce using rule 1 (Program)


State 16

   10 StmtList: Stmt • StmtList

    ID     shift, and go to state 13
    WRITE  shift, and go to state 14

    $default  reduce using rule 9 (StmtList)

    StmtList     go to state 31
    Stmt         go to state 16
    ArrayAccess  go to state 17


State 17

   12 Stmt: ArrayAccess • EQ Expr SEMICOLON

    EQ  shift, and go to state 32


State 18

    6 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 6 (VarDeclList)


State 19

    4 FunctionDef: FUNCTION ID LPAREN RPAREN • LBRACE VarDeclList StmtList RBRACE

    LBRACE  shift, and go to state 33


State 20

    7 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 7 (VarDecl)


State 21

    8 VarDecl: TYPE ID LBRACKET • INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 34


State 22

   11 Stmt: ID EQ • Expr SEMICOLON

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 35


State 23

   14 Stmt: ID LPAREN • RPAREN SEMICOLON

    RPAREN  shift, and go to state 36


State 24

   15 ArrayAccess: ID LBRACKET • Expr RBRACKET

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 37


State 25

   15 ArrayAccess: ID • LBRACKET Expr RBRACKET
   21 Expr: ID •

    LBRACKET  shift, and go to state 24

    $default  reduce using rule 21 (Expr)


State 26

   22 Expr: INTEGER •

    $default  reduce using rule 22 (Expr)


State 27

   23 Expr: FLOAT •

    $default  reduce using rule 23 (Expr)


State 28

   20 Expr: LPAREN • Expr RPAREN

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 38


State 29

   24 Expr: ArrayAccess •

    $default  reduce using rule 24 (Expr)


State 30

   13 Stmt: WRITE Expr • SEMICOLON
   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 39
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    MULTIPLY   shift, and go to state 42
    DIVIDE     shift, and go to state 43


State 31

   10 StmtList: Stmt StmtList •

    $default  reduce using rule 10 (StmtList)


State 32

   12 Stmt: ArrayAccess EQ • Expr SEMICOLON

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 44


State 33

    4 FunctionDef: FUNCTION ID LPAREN RPAREN LBRACE • VarDeclList StmtList RBRACE

    TYPE  shift, and go to state 7

    $default  reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 45
    VarDecl      go to state 9


State 34

    8 VarDecl: TYPE ID LBRACKET INTEGER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 46


State 35

   11 Stmt: ID EQ Expr • SEMICOLON
   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 47
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    MULTIPLY   shift, and go to state 42
    DIVIDE     shift, and go to state 43


State 36

   14 Stmt: ID LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 48


State 37

   15 ArrayAccess: ID LBRACKET Expr • RBRACKET
   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41
    MULTIPLY  shift, and go to state 42
    DIVIDE    shift, and go to state 43
    RBRACKET  shift, and go to state 49


State 38

   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr
   20     | LPAREN Expr • RPAREN

    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41
    MULTIPLY  shift, and go to state 42
    DIVIDE    shift, and go to state 43
    RPAREN    shift, and go to state 50


State 39

   13 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 13 (Stmt)


State 40

   16 Expr: Expr PLUS • Expr

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 51


State 41

   17 Expr: Expr MINUS • Expr

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 52


State 42

   18 Expr: Expr MULTIPLY • Expr

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 53


State 43

   19 Expr: Expr DIVIDE • Expr

    ID       shift, and go to state 25
    INTEGER  shift, and go to state 26
    FLOAT    shift, and go to state 27
    LPAREN   shift, and go to state 28

    ArrayAccess  go to state 29
    Expr         go to state 54


State 44

   12 Stmt: ArrayAccess EQ Expr • SEMICOLON
   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 55
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    MULTIPLY   shift, and go to state 42
    DIVIDE     shift, and go to state 43


State 45

    4 FunctionDef: FUNCTION ID LPAREN RPAREN LBRACE VarDeclList • StmtList RBRACE

    ID     shift, and go to state 13
    WRITE  shift, and go to state 14

    $default  reduce using rule 9 (StmtList)

    StmtList     go to state 56
    Stmt         go to state 16
    ArrayAccess  go to state 17


State 46

    8 VarDecl: TYPE ID LBRACKET INTEGER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 47

   11 Stmt: ID EQ Expr SEMICOLON •

    $default  reduce using rule 11 (Stmt)


State 48

   14 Stmt: ID LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 14 (Stmt)


State 49

   15 ArrayAccess: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 15 (ArrayAccess)


State 50

   20 Expr: LPAREN Expr RPAREN •

    $default  reduce using rule 20 (Expr)


State 51

   16 Expr: Expr • PLUS Expr
   16     | Expr PLUS Expr •
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    MULTIPLY  shift, and go to state 42
    DIVIDE    shift, and go to state 43

    $default  reduce using rule 16 (Expr)


State 52

   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   17     | Expr MINUS Expr •
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr

    MULTIPLY  shift, and go to state 42
    DIVIDE    shift, and go to state 43

    $default  reduce using rule 17 (Expr)


State 53

   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   18     | Expr MULTIPLY Expr •
   19     | Expr • DIVIDE Expr

    $default  reduce using rule 18 (Expr)


State 54

   16 Expr: Expr • PLUS Expr
   17     | Expr • MINUS Expr
   18     | Expr • MULTIPLY Expr
   19     | Expr • DIVIDE Expr
   19     | Expr DIVIDE Expr •

    $default  reduce using rule 19 (Expr)


State 55

   12 Stmt: ArrayAccess EQ Expr SEMICOLON •

    $default  reduce using rule 12 (Stmt)


State 56

    4 FunctionDef: FUNCTION ID LPAREN RPAREN LBRACE VarDeclList StmtList • RBRACE

    RBRACE  shift, and go to state 58


State 57

    8 VarDecl: TYPE ID LBRACKET INTEGER RBRACKET SEMICOLON •

    $default  reduce using rule 8 (VarDecl)


State 58

    4 FunctionDef: FUNCTION ID LPAREN RPAREN LBRACE VarDeclList StmtList RBRACE •

    $default  reduce using rule 4 (FunctionDef)
